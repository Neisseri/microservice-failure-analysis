---
- name: Cleanup Train Ticket Application
  hosts: controller
  gather_facts: no
  become: no
  vars_files:
    - ../../shared_vars.yaml
  tasks:
    - name: Change to application directory and make deploy
      become: no
      shell: make reset-deploy
      args:
        chdir: "{{ base_dir }}/application-demos/Train-Ticket/train-ticket"
      ignore_errors: true

- name: Delete all PVCs in Kubernetes
  hosts: controller
  become: no
  gather_facts: no
  tasks:
    - name: Get all PVCs
      k8s_info:
        api_version: v1
        kind: PersistentVolumeClaim
      register: pvc_info

    - name: Extract PVC names and namespaces
      set_fact:
        pvc_namespaces: "{{ pvc_info.resources | map(attribute='metadata.namespace') | list }}"
        pvc_names: "{{ pvc_info.resources | map(attribute='metadata.name') | list }}"
        pvc_info_list: "{{ pvc_info.resources | map(attribute='metadata') | list }}"

    - name: Print all extracted PVC names and namespaces
      debug:
        msg: "PVC to be deleted: {{ item.name }} in namespace {{ item.namespace }}"
      loop: "{{ pvc_info_list }}"
      register: pvc_messages

    - name: Show all PVC messages
      debug:
        var: pvc_messages.results | map(attribute='msg') | join('\n')
        
    - name: Delete each PVC
      k8s:
        state: absent
        api_version: v1
        kind: PersistentVolumeClaim
        name: "{{ item.name }}"
        namespace: "{{ item.namespace }}"
      loop: "{{ pvc_info_list }}"
      loop_control:
        label: "{{ item.name }}"

- name: Recover node taints in Kubernetes
  hosts: controller
  gather_facts: no
  tasks:
    - name: Get existing taints for controller node before changes
      shell: kubectl get nodes -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{range .spec.taints[*]}{.key}{"="}{.value}{":NoSchedule,"}{end}{"\n"}{end}'
      register: taints_before
      changed_when: false

    - name: Display taints before changes
      debug:
        msg: "Taints before changes: {{ taints_before.stdout }}"

    - name: Recover taint "NoSchedule" from controller node
      shell: |
        kubectl taint nodes main node-role.kubernetes.io/control-plane:NoSchedule
        kubectl taint nodes main node-role.kubernetes.io/master:NoSchedule
      ignore_errors: true

    - name: Get existing taints for controller node after changes
      shell: kubectl get nodes -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{range .spec.taints[*]}{.key}{"="}{.value}{":NoSchedule,"}{end}{"\n"}{end}'
      register: taints_after
      changed_when: false

    - name: Display taints after changes
      debug:
        msg: "Taints after changes: {{ taints_after.stdout }}"
...
